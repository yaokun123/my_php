<?php
/**
 * Created by PhpStorm.
 * User: yaok
 * Date: 2019/3/4
 * Time: 下午4:11
 */



/**
 * pcntl_exec — 在当前进程空间执行指定程序
 *
 * void pcntl_exec ( string $path [, array $args [, array $envs ]] )
 *
 *      ->path必须是可执行二进制文件路径或一个在文件第一行指定了 一个可执行文件路径标头的脚本
 *      （比如文件第一行是#!/usr/local/bin/perl的perl脚本）。
 *
 *      ->args是一个要传递给程序的参数的字符串数组。
 *
 *      ->envs是一个要传递给程序作为环境变量的字符串数组。
 *          这个数组是 key => value格式的，key代表要传递的环境变量的名称，value代表该环境变量值。
 */



/**
 * 注意该方法的返回值比较特殊：当发生错误时返回 FALSE ，没有错误时没有返回，
 * 因为pcntl_exec调用成功，子进程就去运行新的程序 从父进程继承的代码段、数据段、堆、栈等信息全部被替换成新的，
 * 此时的pcntl_exec函数调用栈已经不存在了，所以也就没有返回了。
 */

for($i=0;$i<5;$i++){
    $pid = pcntl_fork();

    if($pid == 0)
    {
        echo "子进程pid = " . posix_getpid() . PHP_EOL;
        $ret = pcntl_exec('/bin/ls');  //执行 ls 命令, 此处调用成功子进程将不会再回来执行下面的任何代码
        var_dump($ret); // 此处的代码不会再执行
    }
}

sleep(5);  //睡眠5秒以确保子进程执行完毕,原因后面会说

exit( "主进程退出...\n");




/**
 * 以上就是对PHP多进程开发的简单介绍，对于子进程不同的存续状态，引出孤儿进程和僵尸进程的概念
 * 在linux系统中，init进程（1号进程）是所有进程的祖先，
 * 其他进程要么是该进程的子进程，要么是子进程的子进程，子进程的子进程的子进程...，
 * linux系统中可以用 pstree 命令查看进程树结构：
 */


/**
 * 在多进程程序中，如果父进程先于子进程退出，那么子进程将会被init进程收养，成为init进程的子进程，
 * 这种进程被称为孤儿进程，我们可以把上面的代码稍作修改来演示这种情况：
 */

//见下一节